require 'msf/core'

class MetasploitModule < Msf::Auxiliary
  include Msf::Exploit::Remote::Tcp
  include Msf::Auxiliary::Scanner

  def initialize
    super(
      'Name'        => 'MS17-010 (EternalBlue) Vulnerability Checker',
      'Description' => 'Checks if a target is vulnerable to MS17-010 (EternalBlue)',
      'Author'      => ['YourName'],
      'License'     => MSF_LICENSE
    )

    register_options([
      Opt::RHOST()
    ])
  end

  def run_host(ip)
    print_status("Checking #{ip} for MS17-010 vulnerability")

    begin
      connect()
      smb_packet = Rex::Proto::SMB::Packet::SimpleClientRequest.new
      smb_packet.smb_header.command = 0x72  # Negotiate Protocol
      sock.put(smb_packet.to_s)

      response = sock.get_once
      if response && response.include?("Public")
        print_good("#{ip} is vulnerable to MS17-010.")
      else
        print_status("#{ip} does not appear vulnerable to MS17-010.")
      end
    rescue => e
      print_error("Error connecting to #{ip}: #{e}")
    ensure
      disconnect
    end
  end
end
